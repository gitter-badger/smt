#!/usr/bin/python2

import sys
import argparse

"""
This program generates an extract table having the following format:
    <S1> <S2> <S3> ... <Sn> ||| <T1> <T2> <T3> ... <Tk> ||| 0-0

Each line is a mapping from a source sentence to target sentence
with special delimiter characters.

You can give the output of this script to extract2bin to generate
a binary phrase table.
"""

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("source_text", type=argparse.FileType("r"),
                        help="Tokenized sentences in the source language")
    parser.add_argument("target_text", type=argparse.FileType("r"),
                        help="Tokenized sentences in the target language")
    args = parser.parse_args()

    src_lines = args.source_text.readlines()
    len_src = len(src_lines)
    tgt_lines = args.target_text.readlines()
    len_tgt = len(tgt_lines)

    if len_src != len_tgt:
        print "Number of sentences doesn't match: %d - %d\n" % (len_src,len_tgt)
        return 1

    for s, t in zip(src_lines, tgt_lines):
        print "%s ||| %s ||| 0-0" % (s.rstrip(), t.rstrip())

    args.source_text.close()
    args.target_text.close()

if __name__ == '__main__':
    sys.exit(main())
